(()=>{var a={456:(a,n,t)=>{const e=t(481),s=t(506),i=t(245);t(518),a.exports={PoolManager:e,QueryBuilder:s,Validator:class{static validator={required:{valid:a=>null!=a&&""!==a,message:(...a)=>"Required value."},minLength:{valid:(a,n)=>a.length<=n,message:(...a)=>"Invalid min length value."},maxLength:{valid:(a,n)=>a.length>=n,message:(...a)=>"Invalid max length value."},min:{valid:(a,n)=>a<=n,message:(...a)=>"Invalid min value."},max:{valid:(a,n)=>a>=n,message:(...a)=>"Invalid max value."},pattern:{valid:(a,n)=>new RegExp(n).test(a),message:(...a)=>"Pattern mismatch."}};static typeOf(a){return toString.call(a).slice(8,-1)}static get validatorKeys(){return Object.keys(this.validator)}static validate(a,n,t=(a=>{}),e=[]){for(var s in a){var i=a[s];if(!this.validatorKeys.includes(s)){var r=n?.[s];if("Array"==this.typeOf(r))for(var o of r)this.validate(i[0],o,t,e);else if("Object"==this.typeOf(r))this.validate(i,r,t,e);else for(var u in i)if(i[u]){var{valid:d,message:l}=this.validator[u];if(!d(r)){var k={code:400,name:s,message:l()};t(k),e.push(k)}}}}return e}},moment:i}},481:(a,n,t)=>{const e=t(768),s=new Map,i={user:"",password:"",database:"",server:"localhost",pool:{max:10,min:0,idleTimeoutMillis:3e4},options:{encrypt:!1,trustServerCertificate:!0,trustedConnection:!0}};a.exports={get:(a="default",n=i)=>{if(!s.has(a)){if(!n)throw new Error("Pool does not exist");const t=new e.ConnectionPool(n),i=t.close.bind(t);t.close=(...n)=>(s.delete(a),i(...n)),s.set(a,t.connect())}return s.get(a)},closeAll:()=>Promise.all(Array.from(s.values()).map((a=>a.then((a=>a.close())))))}},506:(a,n,t)=>{const e=t(768);a.exports=class{static parse(a="",n={},t={}){let{_page:s=1,_limit:i=5e5,_sort:r,_order:o,_start:u=0,_end:d=20,q:l,...k}=n,E="",m="",g="";const c=new Map;s=Number(s),i=Number(i),u=Number(u),d=Number(d);const{database:N,select:_,table:T,query2:A}={...a.match(new RegExp(/^(^USE (?<database>.*)(\n| )[\s\S]+)?SELECT (?<select>.*) FROM (?<table>.*)(\n| )(?<query2>[\s\S]+)$/))?.groups};let S=Object.keys(k);return S.length&&(E=S.map((a=>{const[n,t]=a.match(/^(\w+)(_lt|_gt|_lte|_gte|_eq|_nq|_in|_nin|_like|_between)$/)?.slice(1)||[a,"_eq"],e=k[a];return c.set(n,e),{_lt:(a,n)=>`${a} < @${a}\n`,_gt:(a,n)=>`${a} > @${a}\n`,_lte:(a,n)=>`${a} <= @${a}\n`,_gte:(a,n)=>`${a} >= @${a}\n`,_eq:(a,n)=>`${a} = @${a}\n`,_nq:(a,n)=>`${a} <> @${a}\n`,_in:(a,n)=>`${a} IN (@${a})\n`,_nin:(a,n)=>`${a} NOT IN (@${a})\n`,_like:(a,n)=>`${a} LIKE '%'+@${a}+'%'\n`,_between:(a,n)=>{const[t,e]=n.split(",");return c.delete(a),c.set(`${a}1`,t),c.set(`${a}2`,e),`${a} BETWEEN @${a}1 AND @${a}2\n`}}[t](n,e)})).join("AND ")),l&&(m=Object.keys(t).filter((a=>t[a]?.searchable)).map((a=>{let n=`${a} LIKE '%'+@q+'%'\n`;return E&&(n=[n,E].join("AND ")),n})).join("OR "),c.set("q",l)),(m||E)&&(g+="WHERE ",g+=m||E),a="",N&&(a+=`USE ${N}\n`),a+=`SELECT COUNT(*) FROM ${T}\n`,a+=A,a+=g,a+=`SELECT ${_} FROM ${T}\n`,a+=A,a+=g,(r||!isNaN(u)&&!isNaN(d))&&(a+="ORDER BY ",r?(o=o.split(","),a+=r.split(",").map(((a,n)=>`${a} ${o[n]}`)).join(", ")):a+="(SELECT NULL)",a+="\n"),isNaN(u)||isNaN(d)||(isNaN(s)||isNaN(i)||(u+=(s-1)*i),i=d-u,c.set("_start",u),c.set("_limit",i),a+="OFFSET @_start ROWS\n",a+="FETCH NEXT @_limit ROWS ONLY\n"),[a,Array.from(c.entries(),(([a,n])=>[a,t?.[a]?.type||e.VarChar,n]))]}}},373:(a,n,t)=>{const e=t(124),{moment:s,Validator:i}=t(456);a.exports=class{static async install(a,n,t){try{const t=Object.assign({},a.body),s=await e.install(t);n.json(s.rowsAffected||[])}catch(a){t(a)}}static async sync(a,n,t){try{const t=Object.assign({},a.query),s=e.sync(t);n.json(s)}catch(a){t(a)}}static async installCheck(a,n,t){try{const t=Object.assign({},a.query),s=await e.installCheck(t);n.json({installed:"DATABASE EXISTS"==s.recordset[0][""]})}catch(a){t(a)}}static async syncCheck(a,n,t){try{const t=Object.assign({},a.query),s=await e.syncCheck(t);n.json({pending:0!==s.recordset[0][""],total:s.recordset[0][""]})}catch(a){t(a)}}static async getReseller(a,n,t){try{const t=Object.assign({_start:0,_end:20},a.query),s=await e.getReseller(t);n.set({"X-Total-Count":s.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(s.recordsets?.[1]||[])}catch(a){t(a)}}static async getIBanking(a,n,t){try{const t=Object.assign({_start:0,_end:20},a.query),s=await e.getIBanking(t);n.set({"X-Total-Count":s.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(s.recordsets?.[1]||[])}catch(a){t(a)}}static async getModul(a,n,t){try{const t=Object.assign({_start:0,_end:20},a.query),s=await e.getModul(t);n.set({"X-Total-Count":s.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(s.recordsets?.[1]||[])}catch(a){t(a)}}static async getAkun(a,n,t){try{const t=Object.assign({_start:0,_end:20,kelompok:"0"},a.query),s=await e.getAkun(t);n.set({"X-Total-Count":s.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(s.recordsets?.[1]||[])}catch(a){t(a)}}static async postJurnalUmum(a,n,t){try{const t=Object.assign({kode:"JU",tanggal:s().toISOString(),bukti:""},a.body),r={kode:{required:!0},tanggal:{required:!0},bukti:{required:!1},keterangan:{required:!0},rows:[{kode_akun:{required:!0},debit:{required:!0},kredit:{required:!0}}]};if(i.validate(r,t,(a=>{throw{code:400,message:[a.name,a.message].join(" ")}})),0!=t.rows.reduce(((a,n)=>a+(n.debit-n.kredit)),0))throw{code:400,message:"Saldo tidak seimbang."};if(0==t.rows[0].debit)throw{code:400,message:"Pencatatan jurnal tidak sesuai."};const o=await e.postJurnalUmum(t);n.json(o.recordsets?.[0]?.[0]||{})}catch(a){t(a)}}static async getJurnal(a,n,t){try{const t=Object.assign({_start:0,_end:20,kode:"JU"},a.query),s=await e.getJurnal(t);n.set({"X-Total-Count":s.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(s.recordsets?.[1]||[])}catch(a){t(a)}}static async getBukuBesar(a,n,t){try{const t=Object.assign({_start:0,_end:20,kode_akun:"",tanggal_between:[s().startOf("month").toISOString(),s().endOf("month").toISOString()].join(",")},a.query),i=await e.getBukuBesar(t);n.set({"X-Total-Count":i.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(i.recordsets?.[1]||[])}catch(a){t(a)}}static async getBukuBesarPembantu(a,n,t){try{const t=Object.assign({_start:0,_end:20,kode_akun:"",tanggal_between:[s().startOf("month").toISOString(),s().endOf("month").toISOString()].join(",")},a.query),i=await e.getBukuBesarPembantu(t);n.set({"X-Total-Count":i.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(i.recordsets?.[1]||[])}catch(a){t(a)}}static async getNeracaSaldo(a,n,t){try{const t=Object.assign({_start:0,_end:20,tanggal1:s().startOf("month").toISOString(),tanggal2:s().endOf("month").toISOString()},a.query),i=await e.getNeracaSaldo(t);n.set({"X-Total-Count":i.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(i.recordsets?.[1]||[])}catch(a){t(a)}}static async getLabaRugi(a,n,t){try{const t=Object.assign({_start:0,_end:20,tanggal1:s().startOf("month").toISOString(),tanggal2:s().endOf("month").toISOString()},a.query),i=await e.getLabaRugi(t);n.set({"X-Total-Count":i.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(i.recordsets?.[1]||[])}catch(a){t(a)}}static async getNeraca(a,n,t){try{const t=Object.assign({_start:0,_end:20,tanggal1:s().startOf("month").toISOString(),tanggal2:s().endOf("month").toISOString()},a.query),i=await e.getNeraca(t);n.set({"X-Total-Count":i.recordsets?.[0]?.[0]?.[""]||0,"Access-Control-Expose-Headers":"X-Total-Count"}),n.json(i.recordsets?.[1]||[])}catch(a){t(a)}}}},783:(a,n,t)=>{const e=t(860),s=t(373),i=e.Router();i.post("/install",s.install),i.post("/sync",s.sync),i.get("/install",s.installCheck),i.get("/sync",s.syncCheck),i.get("/reseller",s.getReseller),i.get("/i-banking",s.getIBanking),i.get("/modul",s.getModul),i.get("/akun",s.getAkun),i.post("/jurnal-umum",s.postJurnalUmum),i.get("/jurnal-umum",s.getJurnal),i.get("/buku-besar",s.getBukuBesar),i.get("/buku-besar-pembantu",s.getBukuBesarPembantu),i.get("/neraca-saldo",s.getNeracaSaldo),i.get("/laba-rugi",s.getLabaRugi),i.get("/neraca",s.getNeraca),a.exports=i},124:(a,n,t)=>{const{PoolManager:e,QueryBuilder:s}=t(456),i=t(768),r=t(966);class o{static async install(a={}){const n=await e.get();let t;for(const a of r.install)t=await n.request().query(a);return t}static async installCheck(a={}){const n=await e.get();return await n.request().query(r.installCheck)}static async syncCheck(a={}){const n=await e.get();return await n.request().query(r.syncCheck)}static async sync(){for(;;){const a=(await e.get()).request(),n=await a.query(r.sync);console.log(n.recordset.length);for(const a of n.recordset)null==a.jenis||"B"==a.jenis?a.jumlah>0?a.id_bank?await this.postJurnalTiketDeposit(a):await this.postJurnalDeposit(a):a.id_bank?await this.postJurnalBatalTiketDeposit(a):await this.postJurnalBatalDeposit(a):"K"==a.jenis?a.jumlah>0?await this.postJurnalTukarKomisi(a):await this.postJurnalBatalKomisi(a):"1"==a.jenis?await this.postJurnalTransferKe(a):"2"==a.jenis?await this.postJurnalTransferDari(a):"O"==a.jenis?await this.postJurnalBiayaReply(a):"T"==a.jenis?await this.postJurnalTransaksi(a):"G"==a.jenis&&await this.postJurnalRefund(a),console.log(a);await new Promise((a=>setTimeout(a,1e3)))}}static async getReseller(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int},kode:{type:i.VarChar,searchable:!0},nama:{type:i.VarChar,searchable:!0},saldo:{type:i.Int}},[t,r]=s.parse("USE otomax\n        SELECT kode,nama,saldo FROM reseller\n        ",a,n),o=(await e.get()).request();return r.forEach((([a,n,t])=>o.input(a,n,t))),await o.query(t)}static async getIBanking(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int},kode:{type:i.Int},label:{type:i.VarChar,searchable:!0}},[t,r]=s.parse("USE otomax\n        SELECT kode,label FROM i_banking\n        ",a,n),o=(await e.get()).request();return r.forEach((([a,n,t])=>o.input(a,n,t))),await o.query(t)}static async getModul(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int},kode:{type:i.Int},label:{type:i.VarChar,searchable:!0},saldo:{type:i.Int}},[t,r]=s.parse("USE otomax\n        SELECT kode,label,saldo FROM modul\n        ",a,n),o=(await e.get()).request();return r.forEach((([a,n,t])=>o.input(a,n,t))),await o.query(t)}static async getAkun(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int},kode:{type:i.VarChar,searchable:!0},nama:{type:i.VarChar,searchable:!0}},{kelompok:t,...o}=a,u=[["kelompok",i.VarChar,t]],[d,l]=s.parse("SELECT kode, nama FROM @akun\n        ",o,n),k=(await e.get()).request();return l.concat(u).forEach((([a,n,t])=>k.input(a,n,t))),await k.query(r.getAkun+d)}static async getBukuBesar(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int},tanggal1:{type:i.DateTime},tanggal2:{type:i.DateTime}},[t,r]=s.parse("USE akuntansi\n        SELECT jurnal.tanggal, jurnal.keterangan, mutasi.kode_akun, mutasi.debit, mutasi.kredit, mutasi.saldo_akun FROM mutasi\n        INNER JOIN jurnal ON jurnal.id = mutasi.id_jurnal\n        ",a,n),o=(await e.get()).request();return r.forEach((([a,n,t])=>o.input(a,n,t))),await o.query(t)}static async getBukuBesarPembantu(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int},tanggal1:{type:i.DateTime},tanggal2:{type:i.DateTime}};if(!a.id_bank&&!a.id_pemasok&&!a.id_pelanggan)return{recordsets:[[{"":0}],[]]};const[t,r]=s.parse("USE akuntansi\n        SELECT jurnal.tanggal, jurnal.keterangan, mutasi.kode_akun, mutasi.debit, mutasi.kredit, mutasi.saldo FROM mutasi\n        INNER JOIN jurnal ON jurnal.id = mutasi.id_jurnal\n        ",a,n),o=(await e.get()).request();return r.forEach((([a,n,t])=>o.input(a,n,t))),await o.query(t)}static async getNeracaSaldo(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int}},{tanggal1:t,tanggal2:o,...u}=a,[d,l]=s.parse("SELECT * FROM @mutasi3\n        ",u,n),k=[["tanggal1",i.DateTime,t],["tanggal2",i.DateTime,o]],E=(await e.get()).request();return l.concat(k).forEach((([a,n,t])=>E.input(a,n,t))),await E.query(r.getNeracaSaldo+d)}static async getLabaRugi(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int}},{tanggal1:t,tanggal2:o,...u}=a,[d,l]=s.parse("SELECT * FROM @mutasi3\n        ",u,n),k=[["tanggal1",i.DateTime,t],["tanggal2",i.DateTime,o]],E=(await e.get()).request();return l.concat(k).forEach((([a,n,t])=>E.input(a,n,t))),await E.query(r.getLabaRugi+d)}static async getNeraca(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int}},{tanggal1:t,tanggal2:o,...u}=a,[d,l]=s.parse("SELECT * FROM @mutasi4\n        ",u,n),k=[["tanggal1",i.DateTime,t],["tanggal2",i.DateTime,o]],E=(await e.get()).request();return l.concat(k).forEach((([a,n,t])=>E.input(a,n,t))),await E.query(r.getNeraca+d)}static async postJurnal(a={}){const n=(await e.get()).request();return n.input("kode",i.VarChar,a.kode),n.input("id_mutasi",i.Int,a.id_mutasi),n.input("tanggal",i.DateTime,a.tanggal),n.input("bukti",i.VarChar,a.bukti),n.input("keterangan",i.VarChar,a.keterangan),await n.query(r.postJurnal)}static async getJurnal(a={}){const n={_start:{type:i.Int},_limit:{type:i.Int}},{kelompok:t,...r}=a,[o,u]=s.parse("USE akuntansi\n        SELECT * FROM jurnal\n        ",r,n),d=(await e.get()).request();return u.forEach((([a,n,t])=>d.input(a,n,t))),await d.query(o)}static async postMutasi(a={}){const n=(await e.get()).request();return n.input("id_jurnal",i.Int,a.id_jurnal),n.input("id_mutasi",i.Int,a.id_mutasi),n.input("id_karyawan",i.VarChar,a.id_karyawan),n.input("id_pemasok",i.VarChar,a.id_pemasok),n.input("id_pelanggan",i.VarChar,a.id_pelanggan),n.input("id_konsumen",i.VarChar,a.id_konsumen),n.input("id_bank",i.VarChar,a.id_bank),n.input("kode_produk",i.VarChar,a.kode_produk),n.input("kode_bahan",i.VarChar,a.kode_bahan),n.input("harga_beli",i.Money,a.harga_beli),n.input("harga_jual",i.Money,a.harga_jual),n.input("kode_akun",i.VarChar,a.kode_akun),n.input("debit",i.Money,a.debit),n.input("kredit",i.Money,a.kredit),await n.query(r.postMutasi)}static async postJurnalUmum(a={}){let{rows:n,...t}=a;t=Object.assign({kode:"JU"},t);const e=await o.postJurnal(t);let s=e.recordsets?.[0]?.[0]?.id;for(const a of n){const n=Object.assign(t,a,{id_jurnal:s});await o.postMutasi(n)}return e}static async postJurnalDeposit(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JM"},a,{rows:[{kode_akun:"110000020",debit:a.jumlah,kredit:0},{kode_akun:"220000110",debit:0,kredit:a.jumlah}]}))}static async postJurnalTiketDeposit(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JM"},a,{rows:[{kode_akun:"120000010",debit:a.jumlah,kredit:0},{kode_akun:"220000110",debit:0,kredit:a.jumlah}]}))}static async postJurnalBatalDeposit(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JU"},a,{rows:[{kode_akun:"220000110",debit:a.jumlah,kredit:0},{kode_akun:"110000020",debit:0,kredit:a.jumlah}]}))}static async postJurnalBatalTiketDeposit(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JU"},a,{rows:[{kode_akun:"220000110",debit:a.jumlah,kredit:0},{kode_akun:"120000010",debit:0,kredit:a.jumlah}]}))}static async postJurnalTukarKomisi(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JU"},a,{rows:[{kode_akun:"210000950",debit:a.jumlah,kredit:0},{kode_akun:"220000110",debit:0,kredit:a.jumlah}]}))}static async postJurnalBatalKomisi(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JU"},a,{rows:[{kode_akun:"220000110",debit:a.jumlah,kredit:0},{kode_akun:"210000950",debit:0,kredit:a.jumlah}]}))}static async postJurnalTransferKe(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JU"},a,{rows:[{kode_akun:"220000110",debit:a.jumlah,kredit:0},{kode_akun:"320000099",debit:0,kredit:a.jumlah}]}))}static async postJurnalTransferDari(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JU"},a,{rows:[{kode_akun:"320000099",debit:a.jumlah,kredit:0},{kode_akun:"220000110",debit:0,kredit:a.jumlah}]}))}static async postJurnalBiayaReply(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JM"},a,{rows:[{kode_akun:"220000110",debit:a.jumlah,kredit:0},{kode_akun:"490000010",debit:0,kredit:a.jumlah}]}))}static async postJurnalTransaksi(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JM"},a,{rows:[{kode_akun:"220000110",debit:a.jumlah,kredit:0},{kode_akun:"410000010",debit:0,kredit:a.jumlah},...a.harga_beli&&[{kode_akun:"510000010",debit:a.harga_beli,kredit:0},{kode_akun:"150000110",debit:0,kredit:a.harga_beli}]||[],...a.komisi&&[{kode_akun:"610000020",debit:a.komisi,kredit:0},{kode_akun:"210000950",debit:0,kredit:a.komisi}]||[]]}))}static async postJurnalRefund(a={}){return a.jumlah=Math.abs(a.jumlah),this.postJurnalUmum(Object.assign({kode:"JU"},a,{rows:[{kode_akun:"410000010",debit:a.jumlah,kredit:0},{kode_akun:"220000110",debit:0,kredit:a.jumlah},...a.harga_beli&&[{kode_akun:"150000110",debit:a.harga_beli,kredit:0},{kode_akun:"510000010",debit:0,kredit:a.harga_beli}]||[],...a.komisi&&[{kode_akun:"210000950",debit:a.komisi,kredit:0},{kode_akun:"610000020",debit:0,kredit:a.komisi}]||[]]}))}}a.exports=o},966:a=>{a.exports={install:["\nUSE master\n\nDROP DATABASE IF EXISTS akuntansi \n\nCREATE DATABASE akuntansi\n","\nUSE akuntansi\n\nCREATE TABLE jurnal (\n    id INT NOT NULL IDENTITY(1,1) PRIMARY KEY,\n    kode VARCHAR(20) NOT NULL,\n    tanggal DATETIME NOT NULL,\n    bukti VARCHAR(MAX) NULL,\n    keterangan VARCHAR(MAX) NOT NULL,\n    id_mutasi INT NULL\n)\n\nCREATE TABLE akun (\n    kode VARCHAR(20) NOT NULL PRIMARY KEY,\n    kelompok VARCHAR(20) NOT NULL,\n    nama VARCHAR(50) NOT NULL,\n    kelompok2 INT NOT NULL\n)\n\nCREATE TABLE mutasi (\n    id INT NOT NULL IDENTITY(1,1) PRIMARY KEY,\n    id_jurnal INT NOT NULL,\n    kode_akun VARCHAR(50) NOT NULL,\n    debit MONEY NULL,\n    kredit MONEY NULL,\n    saldo MONEY NULL,\n    saldo_akun MONEY NULL,\n    id_karyawan VARCHAR(50) NULL,\n    id_bank VARCHAR(50) NULL,\n    id_pemasok VARCHAR(50) NULL,\n    id_pelanggan VARCHAR(50) NULL,\n    id_pelanggan2 VARCHAR(50) NULL,\n    id_konsumen VARCHAR(50) NULL,\n    kode_bahan VARCHAR(50) NULL,\n    kode_produk VARCHAR(50) NULL,\n    harga_beli MONEY NULL,\n    harga_jual MONEY NULL,\n    id_mutasi INT NULL,\n)\n\nCREATE TABLE parameter (\n    nama VARCHAR(20) NULL UNIQUE,\n    nilai VARCHAR(MAX) NULL\n)\n\nINSERT INTO akun (kode,kelompok,nama,kelompok2)\nVALUES\n('1', '0', 'Harta', 0),\n('2', '0', 'Kewajiban', 0),\n('3', '0', 'Modal', 0),\n('4', '0', 'Pendapatan', 1),\n('5', '0', 'Beban Atas Pendapatan', 1),\n('6', '0', 'Beban Operasional', 1),\n('7', '0', 'Beban Non Operasional', 1),\n('8', '0', 'Pendapatan Lain', 1),\n('9', '0', 'Beban Lain', 1),\n('1100', '1', 'Kas', 0),\n('1200', '1', 'Bank', 0),\n('1300', '1', 'Piutang Usaha', 0),\n('1390', '1', 'Piutang Lain', 0),\n('1400', '1', 'Persediaan Barang', 0),\n('1490', '1', 'Persediaan Lain', 0),\n('1510', '1', 'Uang Muka Dibayar', 0),\n('1520', '1', 'Pajak Dibayar Dimuka', 0),\n('1530', '1', 'Biaya Dibayar Dimuka', 0),\n('1600', '1', 'Investasi Jangka Panjang', 0),\n('1700', '1', 'Harta Tetap Berwujud', 0),\n('1710', '1', 'Akumulasi Penyusutan Harta Tetap', 0),\n('1800', '1', 'Harta Tetap Tidak Berwujud', 0),\n('1900', '1', 'Harta Lainnya', 0),\n('2100', '2', 'Utang Usaha', 0),\n('2190', '2', 'Utang Lain', 0),\n('2210', '2', 'Uang Muka Diterima', 0),\n('2220', '2', 'Pendapatan Diterima Dimuka', 0),\n('2300', '2', 'Utang Pajak', 0),\n('2500', '2', 'Utang Jangka Panjang', 0),\n('3100', '3', 'Modal', 0),\n('3200', '3', 'Laba', 0),\n('4100', '4', 'Pendapatan Usaha', 1),\n('4900', '4', 'Pendapatan Lain', 1),\n('5100', '5', 'Beban atas Pendapatan', 1),\n('6100', '6', 'Beban Pemasaran Dan Penjualan', 1),\n('6200', '6', 'Beban Administrasi Dan Umum', 1),\n('6900', '6', 'Beban Operasional Lain', 1),\n('7100', '7', 'Beban Penyusutan', 1),\n('7900', '7', 'Beban Non Operasional Lain', 1),\n('8100', '8', 'Pendapatan Luar Usaha', 1),\n('9100', '9', 'Beban Luar Usaha', 1),\n('9900', '9', 'Beban Pajak', 1),\n('110000010', '1100', 'Kas Kecil', 0),\n('110000020', '1100', 'Kas', 0),\n('110000030', '1200', 'Kas (USD)', 0),\n('120000010', '1200', 'Bank', 0),\n('120000020', '1200', 'Bank (USD)', 0),\n('130000010', '1300', 'Piutang Usaha', 0),\n('130000020', '1300', 'Piutang Usaha (USD)', 0),\n('130000910', '1390', 'Piutang Giro', 0),\n('130000920', '1390', 'Piutang Karyawan', 0),\n('130000990', '1390', 'Piutang Lain', 0),\n('130000999', '1390', 'Cadangan Kerugian Piutang', 0),\n('140000010', '1400', 'Persediaan # 1', 0),\n('140000020', '1400', 'Persediaan # 2', 0),\n('140000030', '1400', 'Persediaan # 3', 0),\n('140000040', '1400', 'Persediaan # 4', 0),\n('140000910', '1490', 'Persediaan Yang Belum Dibebankan', 0),\n('150000110', '1510', 'Uang Muka Pembelian', 0),\n('150000120', '1510', 'Uang Muka Pembelian (USD)', 0),\n('150000130', '1510', 'Uang Muka Pembelian Harta Tetap', 0),\n('150000211', '1520', 'PPN Masukan', 0),\n('150000212', '1520', 'PPh 21 Dibayar Dimuka', 0),\n('150000213', '1520', 'PPh 22 Dibayar Dimuka', 0),\n('150000214', '1520', 'PPh 23 Dibayar Dimuka', 0),\n('150000215', '1520', 'PPh 24 Dibayar Dimuka', 0),\n('150000216', '1520', 'PPh 25 Dibayar Dimuka', 0),\n('150000217', '1520', 'PPh 26 Dibayar Dimuka', 0),\n('150000218', '1520', 'PPh Ps 4 Ayat 2 Dibayar Dimuka', 0),\n('150000310', '1530', 'Sewa Dibayar di Muka', 0),\n('150000320', '1530', 'Asuransi Dibayar di Muka', 0),\n('150000390', '1530', 'Biaya Dibayar di Muka Lain', 0),\n('160000010', '1600', 'Investasi Saham', 0),\n('170000010', '1700', 'Tanah', 0),\n('170000020', '1700', 'Bangunan', 0),\n('170000030', '1700', 'Mesin & Peralatan', 0),\n('170000040', '1700', 'Kendaraan', 0),\n('170000090', '1700', 'Harta Lain', 0),\n('170000120', '1710', 'Akumulasi Penyusutan Bangunan', 0),\n('170000130', '1710', 'Akumulasi Penyusutan Mesin & Peralatan', 0),\n('170000140', '1710', 'Akumulasi Penyusutan Kendaraan', 0),\n('170000190', '1710', 'Akumulasi Penyusutan Harta Lain', 0),\n('180000010', '1800', 'Hak Merek', 0),\n('180000020', '1800', 'Hak Cipta', 0),\n('180000030', '1800', 'Good Will', 0),\n('210000010', '2100', 'Utang Usaha', 0),\n('210000020', '2100', 'Utang Usaha (USD)', 0),\n('210000910', '2190', 'Utang Usaha Yang Belum Ditagih', 0),\n('210000920', '2190', 'Utang Konsinyasi', 0),\n('210000930', '2190', 'Utang Giro', 0),\n('210000940', '2190', 'Utang Gaji & Upah', 0),\n('210000950', '2190', 'Utang Komisi Penjualan', 0),\n('220000110', '2210', 'Uang Muka Penjualan', 0),\n('220000120', '2210', 'Uang Muka Penjualan (USD)', 0),\n('230000011', '2300', 'PPN Keluaran', 0),\n('230000012', '2300', 'Utang PPh 21', 0),\n('230000013', '2300', 'Utang PPh 22', 0),\n('230000014', '2300', 'Utang PPh 23', 0),\n('230000015', '2300', 'Utang PPh 24', 0),\n('230000016', '2300', 'Utang PPh 25', 0),\n('230000017', '2300', 'Utang PPh 26', 0),\n('230000018', '2300', 'Utang PPh Ps 4 Ayat 2', 0),\n('250000010', '2500', 'Utang Bank', 0),\n('250000020', '2500', 'Utang Pembiayaan', 0),\n('310000010', '3100', 'Simpanan Wajib', 0),\n('310000020', '3100', 'Simpanan Pokok', 0),\n('310000030', '3100', 'Simpanan Sukarela', 0),\n('320000010', '3200', 'Dana Cadangan', 0),\n('320000020', '3200', 'SHU', 0),\n('320000099', '3200', 'Historical Balancing', 0),\n('410000010', '4100', 'Penjualan # 1', 1),\n('410000020', '4100', 'Penjualan # 2', 1),\n('410000030', '4100', 'Penjualan # 3', 1),\n('410000040', '4100', 'Potongan Penjualan', 1),\n('490000010', '4900', 'Pendapatan Lain', 1),\n('510000010', '5100', 'Harga Pokok Penjualan # 1', 1),\n('510000020', '5100', 'Harga Pokok Penjualan # 2', 1),\n('510000030', '5100', 'Harga Pokok Penjualan # 3', 1),\n('510000040', '5100', 'Penyesuaian Persediaan', 1),\n('510000050', '5100', 'Beban Pengiriman', 1),\n('510000060', '5100', 'Potongan Pembelian', 1),\n('610000010', '6100', 'Beban Iklan & Promosi', 1),\n('610000020', '6100', 'Beban Komisi Penjualan', 1),\n('610000030', '6100', 'Beban Piutang Tak Tertagih', 1),\n('620000010', '6200', 'Beban Gaji & Upah', 1),\n('620000020', '6200', 'Beban Staff Ahli & Perizinan', 1),\n('620000031', '6200', 'Beban Sewa Kantor', 1),\n('620000032', '6200', 'Beban Listrik', 1),\n('620000033', '6200', 'Beban Air', 1),\n('620000034', '6200', 'Beban Telepon', 1),\n('620000035', '6200', 'Beban Internet', 1),\n('620000040', '6200', 'Beban Perlengkapan', 1),\n('690000010', '6900', 'Beban Lain', 1),\n('710000020', '7100', 'Beban Penyusutan Bangunan', 1),\n('710000030', '7100', 'Beban Penyusutan Mesin & Peralatan', 1),\n('710000040', '7100', 'Beban Penyusutan Kendaraan', 1),\n('710000090', '7100', 'Beban Penyusutan Harta Lain', 1),\n('810000010', '8100', 'Laba (Rugi) Selisih Kurs', 1),\n('810000020', '8100', 'Laba (Rugi) Penjualan Harta Tetap', 1),\n('910000011', '9100', 'Beban Bunga Bank', 1),\n('910000012', '9100', 'Beban Jasa Bank', 1),\n('990000010', '9900', 'Beban Pajak Penghasilan', 1)\n\nUSE otomax\n\nDECLARE @komisi TABLE(\n    kode VARCHAR(20),\n    saldo MONEY\n)\nDECLARE @saldo MONEY\nDECLARE @jurnal TABLE(\n    id INT\n)\nDECLARE @id_jurnal INT\n\nINSERT INTO akuntansi.dbo.jurnal\n    (kode,tanggal,keterangan)\nOUTPUT inserted.id INTO @jurnal\nVALUES\n    ('JS',GETDATE(), 'Saldo Awal')\n\nINSERT INTO @komisi\nSELECT kode_reseller, SUM(jumlah)\nFROM komisi\nWHERE tukar = 0\nGROUP BY kode_reseller\n\nSET @id_jurnal = (SELECT id\nFROM @jurnal)\nSET @saldo = (SELECT SUM(saldo)\nFROM reseller) + (SELECT SUM(saldo)\nFROM @komisi)\n\n-- \"kode\": \"320000099\",\n-- \"nama\": \"Historical Balancing\",\nINSERT INTO akuntansi.dbo.mutasi\n    (id_jurnal,kode_akun,saldo_akun)\nSELECT @id_jurnal, '320000099', @saldo\n\n-- \"kode\": \"220000110\",\n-- \"nama\": \"Uang Muka Penjualan\",\nINSERT INTO akuntansi.dbo.mutasi\n    (id_jurnal,kode_akun,id_pelanggan,saldo,saldo_akun)\nSELECT @id_jurnal, '220000110', kode, 0 - saldo, SUM(0 - saldo) OVER(ORDER BY kode)\nFROM reseller\n\n-- \"kode\": \"210000950\",\n-- \"nama\": \"Hutang Komisi Penjualan\",\nINSERT INTO akuntansi.dbo.mutasi\n    (id_jurnal,kode_akun,id_pelanggan,saldo,saldo_akun)\nSELECT @id_jurnal, '210000950', kode, 0 - saldo, SUM(0 - saldo) OVER(ORDER BY kode)\nFROM @komisi\n\nDECLARE @id_mutasi INT = ISNULL((SELECT TOP 1\n    kode\nFROM mutasi\nORDER BY kode DESC), 0)\n\nUPDATE akuntansi.dbo.parameter\nSET nilai = @id_mutasi\nWHERE nama = 'id_mutasi'\n\nIF @@ROWCOUNT = 0\nBEGIN\n    INSERT INTO akuntansi.dbo.parameter\n        (nama,nilai)\n    VALUES\n        ('id_mutasi',@id_mutasi)\nEND\n"],installCheck:"\nUSE master\n\nIF DB_ID('akuntansi') IS NOT NULL\nBEGIN\n\tSELECT 'DATABASE EXISTS'\nEND\nELSE\nBEGIN\n\tSELECT 'DATABASE NOT EXISTS'\nEND\n",syncCheck:"\nUSE otomax\n\nDECLARE @id_mutasi INT = CAST(ISNULL((SELECT nilai FROM akuntansi.dbo.parameter WHERE nama = 'id_mutasi'), 0) AS INT)\n\nSELECT COUNT(*) FROM mutasi\nWHERE kode > @id_mutasi\n",postJurnal:"\nUSE akuntansi\n\nDECLARE @jurnal TABLE(id INT)\n\nINSERT INTO jurnal (kode, tanggal, bukti, keterangan, id_mutasi)\nOUTPUT inserted.id INTO @jurnal\nVALUES (@kode, @tanggal, @bukti, @keterangan, @id_mutasi)\n\nSELECT id FROM @jurnal\n",postMutasi:'\nUSE akuntansi\n\nDECLARE @saldo MONEY\n\n-- "kode": "120000010",\n-- "nama": "Bank",\nIF @kode_akun = \'120000010\' AND ( @id_bank IS NOT NULL AND @id_bank <> \'\' )\nBEGIN\n    SET @saldo = ISNULL((SELECT TOP 1 saldo FROM mutasi WHERE kode_akun = @kode_akun AND id_bank = @id_bank ORDER BY id DESC), 0) + (@debit - @kredit)\nEND\n-- "kode": "150000110",\n-- "nama": "Uang Muka Pembelian",\nELSE IF @kode_akun = \'150000110\' AND ( @id_pemasok IS NOT NULL AND @id_pemasok <> \'\' )\nBEGIN\n    SET @saldo = ISNULL((SELECT TOP 1 saldo FROM mutasi WHERE kode_akun = @kode_akun AND id_pemasok = @id_pemasok ORDER BY id DESC), 0) + (@debit - @kredit)\nEND\n-- "kode": "220000110",\n-- "nama": "Uang Muka Penjualan",\nELSE IF @kode_akun = \'220000110\' AND ( @id_pelanggan IS NOT NULL AND @id_pelanggan <> \'\' )\nBEGIN\n    SET @saldo = ISNULL((SELECT TOP 1 saldo FROM mutasi WHERE kode_akun = @kode_akun AND id_pelanggan = @id_pelanggan ORDER BY id DESC), 0) + (@debit - @kredit)\nEND\n-- "kode": "210000950",\n-- "nama": "Hutang Komisi Penjualan",\nELSE IF @kode_akun = \'210000950\' AND ( @id_pelanggan IS NOT NULL AND @id_pelanggan <> \'\' )\nBEGIN\n    SET @saldo = ISNULL((SELECT TOP 1 saldo FROM mutasi WHERE kode_akun = @kode_akun AND id_pelanggan = @id_pelanggan ORDER BY id DESC), 0) + (@debit - @kredit)\nEND\n\nDECLARE @saldo_akun MONEY = ISNULL((SELECT TOP 1 saldo_akun FROM mutasi WHERE kode_akun = @kode_akun ORDER BY id DESC), 0) + (@debit - @kredit)\n\nINSERT INTO mutasi ( id_jurnal, id_mutasi, id_karyawan, id_pemasok, id_pelanggan, id_konsumen, id_bank, kode_produk, kode_bahan, harga_beli, harga_jual, kode_akun, debit, kredit, saldo, saldo_akun )\nVALUES ( @id_jurnal, @id_mutasi, @id_karyawan, @id_pemasok, @id_pelanggan, @id_konsumen, @id_bank, @kode_produk, @kode_bahan, @harga_beli, @harga_jual, @kode_akun, @debit, @kredit, @saldo, @saldo_akun )\n\nIF @id_mutasi IS NOT NULL AND @id_mutasi <> \'\'\nBEGIN\n    UPDATE parameter SET nilai = @id_mutasi WHERE nama = \'id_mutasi\'\nEND\n',sync:"\nUSE otomax\n\nDECLARE @mutasi TABLE(\n    id_mutasi INT,\n    id_pelanggan VARCHAR(50),\n    tanggal DATETIME,\n    jumlah MONEY,\n    keterangan VARCHAR(MAX),\n    id_pelanggan2 VARCHAR(50),\n    jenis VARCHAR(50),\n    kode_transaksi VARCHAR(50),\n    kode_produk VARCHAR(50),\n    id_konsumen VARCHAR(50),\n    harga_jual MONEY,\n    id_pemasok INT,\n    harga_beli MONEY,\n    bukti VARCHAR(MAX),\n    komisi MONEY,\n    id_bank INT,\n    status INT,\n    tgl_status DATETIME\n)\nDECLARE @kode INT = CAST(ISNULL((SELECT nilai FROM akuntansi.dbo.parameter WHERE nama = 'id_mutasi'), 0) AS INT)\nDECLARE @kode2 INT\n\nINSERT INTO @mutasi\nSELECT TOP (1000)\n    mutasi.kode AS id_mutasi,\n    mutasi.kode_reseller AS id_pelanggan,\n    mutasi.tanggal AS tanggal,\n    mutasi.jumlah AS jumlah,\n    mutasi.keterangan AS keterangan,\n    mutasi.kode_reseller_2 AS id_pelanggan2,\n    mutasi.jenis AS jenis,\n    mutasi.kode_transaksi AS kode_transaksi,\n    transaksi.kode_produk AS kode_produk,\n    transaksi.tujuan AS id_konsumen,\n    transaksi.harga AS harga_jual,\n    transaksi.kode_modul AS id_pemasok,\n    transaksi.harga_beli AS harga_beli,\n    transaksi.sn AS bukti,\n    transaksi.komisi AS komisi,\n    i_banking.kode AS id_bank,\n    transaksi.status AS status,\n    transaksi.tgl_status AS tgl_status\nFROM mutasi\nLEFT OUTER JOIN transaksi ON transaksi.kode = mutasi.kode_transaksi\nLEFT OUTER JOIN i_banking ON mutasi.keterangan LIKE '%' + i_banking.label + '%'\nWHERE mutasi.kode > @kode\nORDER BY mutasi.kode\n\nSET @kode2 = (SELECT TOP 1 id_mutasi FROM @mutasi WHERE status < 20 OR DATEADD(SECOND, 5, tgl_status) > GETDATE() ORDER BY id_mutasi)\n\nSELECT * FROM @mutasi \nWHERE @kode2 IS NOT NULL \nAND id_mutasi < @kode2 \nOR @kode2 IS NULL \nORDER BY id_mutasi\n",getNeracaSaldo:"\nUSE akuntansi\n\nDECLARE @mutasi TABLE (\n    kode_akun VARCHAR(20),\n    saldo_akun MONEY\n)\nDECLARE @mutasi2 TABLE (\n    kode VARCHAR(20),\n    nama VARCHAR(MAX),\n    debit MONEY,\n    kredit MONEY\n)\nDECLARE @mutasi3 TABLE (\n    kode VARCHAR(20),\n    nama VARCHAR(MAX),\n    debit MONEY,\n    kredit MONEY\n)\nDECLARE @saldo MONEY\n\nINSERT INTO @mutasi\nSELECT mutasi.kode_akun, mutasi.saldo_akun\nFROM mutasi\nJOIN jurnal ON jurnal.id = mutasi.id_jurnal\nWHERE mutasi.id IN (SELECT MAX(mutasi.id) FROM mutasi GROUP BY mutasi.kode_akun)\nAND jurnal.tanggal BETWEEN @tanggal1 AND @tanggal2\n\nINSERT INTO @mutasi2\nSELECT \n    akun.kode,\n    akun.nama,\n    CASE WHEN m.saldo_akun > 0 THEN m.saldo_akun ELSE 0 END AS debit,\n    CASE WHEN m.saldo_akun < 0 THEN ABS(m.saldo_akun) ELSE 0 END AS kredit\nFROM @mutasi m\nFULL JOIN akun ON akun.kode = m.kode_akun\n\nSET @saldo = (SELECT SUM(debit) - SUM(kredit) FROM @mutasi2)\n\nINSERT INTO @mutasi3\nSELECT kode, nama, debit, kredit FROM @mutasi2\nWHERE debit <> 0 OR kredit <> 0\nUNION ALL\nSELECT '', '', SUM(debit), SUM(kredit) FROM @mutasi2\nUNION ALL\nSELECT '', '', CASE WHEN @saldo > 0 THEN @saldo ELSE '' END, CASE WHEN @saldo < 0 THEN ABS(@saldo) ELSE '' END\n",getLabaRugi:"\nUSE akuntansi\n\nDECLARE @mutasi TABLE (\n    kode_akun VARCHAR(20),\n    saldo_akun MONEY\n)\nDECLARE @mutasi2 TABLE (\n    kode VARCHAR(20),\n    kelompok2 VARCHAR(20),\n    nama VARCHAR(MAX),\n    debit MONEY,\n    kredit MONEY\n)\nDECLARE @mutasi3 TABLE (\n    kode VARCHAR(20),\n    nama VARCHAR(MAX),\n    debit MONEY,\n    kredit MONEY\n)\nDECLARE @saldo MONEY\n\nINSERT INTO @mutasi\nSELECT mutasi.kode_akun, mutasi.saldo_akun\nFROM mutasi\nJOIN jurnal ON jurnal.id = mutasi.id_jurnal\nWHERE mutasi.id IN (SELECT MAX(mutasi.id) FROM mutasi GROUP BY mutasi.kode_akun)\nAND jurnal.tanggal BETWEEN @tanggal1 AND @tanggal2\n\nINSERT INTO @mutasi2\nSELECT \n    akun.kode,\n    akun.kelompok2,\n    akun.nama,\n    CASE WHEN m.saldo_akun > 0 THEN m.saldo_akun ELSE 0 END AS debit,\n    CASE WHEN m.saldo_akun < 0 THEN ABS(m.saldo_akun) ELSE 0 END AS kredit\nFROM @mutasi m\nFULL JOIN akun ON akun.kode = m.kode_akun\nWHERE akun.kelompok2 = 1\n\nSET @saldo = (SELECT SUM(debit) - SUM(kredit) FROM @mutasi2)\n\nINSERT INTO @mutasi3\nSELECT kode, nama, debit, kredit FROM @mutasi2\nWHERE debit <> 0 OR kredit <> 0\nUNION ALL\nSELECT '', '', SUM(debit), SUM(kredit) FROM @mutasi2\nUNION ALL\nSELECT '', '', CASE WHEN @saldo > 0 THEN @saldo ELSE '' END, CASE WHEN @saldo < 0 THEN ABS(@saldo) ELSE '' END\n",getNeraca:"\nUSE akuntansi\n\nDECLARE @mutasi TABLE (\n    kode_akun VARCHAR(20),\n    saldo_akun MONEY\n)\nDECLARE @mutasi2 TABLE (\n    kode VARCHAR(20),\n    kelompok2 VARCHAR(20),\n    nama VARCHAR(MAX),\n    debit MONEY,\n    kredit MONEY\n)\nDECLARE @mutasi3 TABLE (\n    kode VARCHAR(20),\n    nama VARCHAR(MAX),\n    debit MONEY,\n    kredit MONEY\n)\nDECLARE @mutasi4 TABLE (\n    kode VARCHAR(20),\n    nama VARCHAR(MAX),\n    debit MONEY,\n    kredit MONEY\n)\nDECLARE @saldo MONEY\nDECLARE @saldo2 MONEY\n\nINSERT INTO @mutasi\nSELECT mutasi.kode_akun, mutasi.saldo_akun\nFROM mutasi\nJOIN jurnal ON jurnal.id = mutasi.id_jurnal\nWHERE mutasi.id IN (SELECT MAX(mutasi.id) FROM mutasi GROUP BY mutasi.kode_akun)\nAND jurnal.tanggal BETWEEN @tanggal1 AND @tanggal2\n\nINSERT INTO @mutasi2\nSELECT \n    akun.kode,\n    akun.kelompok2,\n    akun.nama,\n    CASE WHEN m.saldo_akun > 0 THEN m.saldo_akun ELSE 0 END AS debit,\n    CASE WHEN m.saldo_akun < 0 THEN ABS(m.saldo_akun) ELSE 0 END AS kredit\nFROM @mutasi m\nFULL JOIN akun ON akun.kode = m.kode_akun\n\nSET @saldo = (SELECT SUM(debit) - SUM(kredit) FROM @mutasi2\nWHERE kelompok2 = 1)\n\n-- \"kode\": \"320000020\",\n-- \"nama\": \"Laba Tahun Berjalan\",\nUPDATE @mutasi2\nSET \ndebit = CASE WHEN @saldo > 0 THEN @saldo ELSE 0 END,\nkredit = CASE WHEN @saldo < 0 THEN ABS(@saldo) ELSE 0 END\nWHERE kode = '320000020'\n\nINSERT INTO @mutasi3\nSELECT kode, nama, debit, kredit FROM @mutasi2\nWHERE kelompok2 = 0\n\nSET @saldo2 = (SELECT SUM(debit) - SUM(kredit) FROM @mutasi3)\n\nINSERT INTO @mutasi4\nSELECT kode, nama, debit, kredit FROM @mutasi3\nWHERE debit <> 0 OR kredit <> 0\nUNION ALL\nSELECT '', '', SUM(debit), SUM(kredit) FROM @mutasi3\nUNION ALL\nSELECT '', '', CASE WHEN @saldo2 > 0 THEN @saldo2 ELSE '' END, CASE WHEN @saldo2 < 0 THEN ABS(@saldo2) ELSE '' END\n",getAkun:"\nUSE akuntansi\n\n-- DECLARE @kelompok VARCHAR(20) = '0'\nDECLARE @akun TABLE (\n    kode VARCHAR(20) NOT NULL PRIMARY KEY,\n    kelompok VARCHAR(20) NOT NULL,\n    nama VARCHAR(50) NOT NULL,\n    kelompok2 INT NOT NULL,\n\tlevel INT NOT NULL\n)\n\n;WITH akun2 AS (\n    SELECT kode,\n        kelompok,\n        nama,\n        kelompok2,\n\t\t0 AS level\n    FROM akun\n    WHERE kelompok = @kelompok\n    UNION ALL\n    SELECT a.kode,\n        a.kelompok,\n        a.nama,\n        a.kelompok2,\n\t\tlevel + 1 AS level\n    FROM akun a\n        JOIN akun2 a2 ON a2.kode = a.kelompok\n)\n\nINSERT INTO @akun\nSELECT kode,\n    kelompok,\n    nama,\n    kelompok2,\n\tlevel\nFROM akun2\nORDER BY kode\n\n-- SELECT * FROM @akun\n"}},582:a=>{"use strict";a.exports=require("cors")},860:a=>{"use strict";a.exports=require("express")},806:a=>{"use strict";a.exports=require("helmet")},245:a=>{"use strict";a.exports=require("moment")},518:a=>{"use strict";a.exports=require("moment/locale/id")},768:a=>{"use strict";a.exports=require("mssql/msnodesqlv8")},147:a=>{"use strict";a.exports=require("fs")},685:a=>{"use strict";a.exports=require("http")},687:a=>{"use strict";a.exports=require("https")},37:a=>{"use strict";a.exports=require("os")}},n={};function t(e){var s=n[e];if(void 0!==s)return s.exports;var i=n[e]={exports:{}};return a[e](i,i.exports,t),i.exports}(()=>{const a=t(685),n=t(687),e=t(147),s=t(37),i=t(860),r=t(582),o=t(806);process.on("uncaughtException",console.error),process.on("unhandledRejection",console.error);const u={key:e.readFileSync("key.pem"),cert:e.readFileSync("cert.pem")},d=i();d.use(i.json()),d.use(r()),d.use(o({contentSecurityPolicy:!1})),d.use(((a,n,t)=>{t()})),d.use("/api/akuntansi/v1/",t(783)),d.use("/data.js",((a,n)=>{n.type(".js");let t="";t+=`window.baseUrl="http://${a.hostname}:${l.address().port}"\n`,n.send(t)})),d.use(i.static("./static")),d.use("*",((a,n)=>{n.sendFile(process.cwd()+"/static/index.html")})),d.use(((a,n,t)=>{t({code:404})})),d.use(((n,t,e,s)=>{n=JSON.parse(JSON.stringify(n,Object.getOwnPropertyNames(n))),console.error(n),n.code=(n?.originalError?.code?400:a.STATUS_CODES[n.code]&&n.code)||500,e.status(n.code).json({name:n.name,code:n.code,message:n.message})}));let l=a.createServer(d),k=n.createServer(u,d);l.listen(80,"0.0.0.0",(()=>{const a=s.networkInterfaces();console.log(Object.keys(a).map((n=>a[n])).flat().filter((a=>"IPv4"==a.family)).map((a=>`http://${a.address}:${l.address().port}`)).join("\n"))})),k.listen(443,"0.0.0.0",(()=>{}))})()})();